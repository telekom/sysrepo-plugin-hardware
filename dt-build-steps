#!/bin/bash
# (C) 2020 Deutsche Telekom AG.
#
# Deutsche Telekom AG and all other contributors /
# copyright owners license this file to you under the Apache
# License, Version 2.0 (the "License"); you may not use this
# file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

apt-get update && apt-get install -y git curl wget libssl-dev libtool build-essential vim \
autoconf automake pkg-config libgtk-3-dev make valgrind doxygen libev-dev libpcre3-dev \
unzip sudo python3 python3-dev bison flex swig libcmocka0 libcmocka-dev cmake supervisor

# Adding netconf user
adduser --system netconf
mkdir -p /home/netconf/.ssh
echo "netconf:netconf" | chpasswd && adduser netconf sudo

# Clearing and setting authorized ssh keys
echo '' > /home/netconf/.ssh/authorized_keys
ssh-keygen -A
ssh-keygen -t rsa -b 4096 -P '' -f /home/netconf/.ssh/id_rsa
cat /home/netconf/.ssh/id_rsa.pub >> /home/netconf/.ssh/authorized_keys


# Updating shell to bash
sed -i s#/home/netconf:/bin/false#/home/netconf:/bin/bash# /etc/passwd
mkdir /opt/dev && sudo chown -R netconf /opt/dev

# set password for user (same as the username)
echo "root:root" | chpasswd


BUILDDIR=/opt/dev

PYTHON_INCLUDE_DIRS=/usr/include/python3.6
PYTHON_LIBRARIES=/usr/lib/python3.6/config-3.6m-x86_64-linux-gnu/libpython3.6.so

mkdir $BUILDDIR && cd $BUILDDIR

# Libyang
cd $BUILDDIR
git clone https://github.com/CESNET/libyang && cd libyang
git checkout tags/v1.0.225
mkdir build && cd build
cmake \
-DCMAKE_INSTALL_PREFIX=/usr \
-DGEN_CPP_BINDINGS=1 \
-DGEN_LANGUAGE_BINDINGS=1 \
..
make -j2
make install

# export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/opt/libyang/lib/pkgconfig

# Sysrepo
cd $BUILDDIR
git clone https://github.com/sysrepo/sysrepo && cd sysrepo &&
checkout tags/v1.4.122
mkdir build && cd build
cmake \
-DCMAKE_BUILD_TYPE=Debug \
-DCMAKE_INSTALL_PREFIX=/usr \
-DGEN_CPP_BINDINGS=ON \
-DGEN_LANGUAGE_BINDINGS=ON \
-DLIBYANG_CPP_INCLUDE_DIR=/usr/include \
-DLIBYANG_CPP_LIBRARY=/usr/lib/x86_64-linux-gnu/libyang-cpp.so \
-DLIBYANG_INCLUDE_DIR=/usr/include \
-DLIBYANG_LIBRARY=/usr/lib/x86_64-linux-gnu/libyang.so \
-DREPO_PATH=/etc/sysrepo \
..
make -j2
make install


# libyang and sysrepo
# sh -c "echo 'deb http://download.opensuse.org/repositories/home:/liberouter/xUbuntu_18.04/ /' > /etc/apt/sources.list.d/home:liberouter.list"
# wget -nv https://download.opensuse.org/repositories/home:liberouter/xUbuntu_18.04/Release.key -O Release.key
# apt-key add - < Release.key
# apt-get update
# apt-get install libyang1 libyang-dev sysrepo sysrepo-dev

# libssh
cd $BUILDIR
git clone https://git.libssh.org/projects/libssh.git && cd libssh && git checkout stable-0.9
mkdir build && cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE="Release" -DWITH_ZLIB=ON -DWITH_NACL=OFF -DWITH_PCAP=OFF ..
make -j2
make install

# libnetconf2 (latest package is not available on Ubuntu 18.04, so we have to compile it from source)
cd $BUILDDIR
git clone https://github.com/CESNET/libnetconf2.git && cd libnetconf2
git checkout master
mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE:String="Release" -DCMAKE_INSTALL_PREFIX:PATH=/usr -DENABLE_BUILD_TESTS=OFF ..
make -j2
make install

# netopeer 2 (latest package is not available on Ubuntu 18.04, so we have to compile it from source)
cd /opt/dev
git clone https://github.com/CESNET/Netopeer2.git && cd Netopeer2
git checkout master
mkdir build && cd build
cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE:String="Release" ..
make -j2
make install


# ietf-hardware plugin
apt-get install -y meson ninja-build libsensors4-dev lm-sensors
cd $BUILDDIR
git clone git@gitlab.dev.terastrm.net:mirrors/qualitance-sysrepo.git && cd qualitance-sysrepo
mkdir build && cd build

meson --prefix="/usr/lib/sysrepo/plugins" ./build
ninja -C ./build
ninja install -C ./build

sysrepoctl -i $BUILDDIR/qualitance-sysrepo/yang/iana-hardware.yang
sysrepoctl -i $BUILDDIR/qualitance-sysrepo/yang/ietf-hardware.yang
sysrepoctl -c ietf-hardware -e hardware-sensor -e entity-mib